{"entry_point_file_name":"quiz_game.py","files":[{"name":"question.py","class_diagram":"@startuml\nClass Question {\n+question: String\n+optionA: String\n+optionB: String\n+optionC: String\n+optionD: String\n+correctAnswer: String\n}\n@enduml"},{"name":"player.py","class_diagram":"@startuml\nClass Player {\n+name: String\n+score: Integer\n+update_score(score: Integer)\n+reset_score()\n}\n@enduml"},{"name":"quiz.py","class_diagram":"@startuml\nClass Quiz {\n+questions: List[Question]\n+currentQuestionIndex: Integer\n+player: Player\n+startQuiz(player: Player): Void\n+getNextQuestion(): Question\n+checkAnswer(answer: Any): Boolean\n+updateScore(player: Player): Void\n}\n@enduml"},{"name":"quiz_game.py","class_diagram":"@startuml\nClass QuizGame {\n+player: Player\n+quiz: Quiz\n+__init__(self, player: Player, quiz: Quiz): void\n+startQuiz(): void\n+displayQuestion(question: Question): void\n+updateScore(score: int): void\n+endQuiz(): void\n}\n@enduml"}],"sequence_diagram":"@startuml\nparticipant \"quiz_game.py\" as A\nparticipant \"quiz.py\" as B\nparticipant \"player.py\" as C\nparticipant \"question.py\" as D\nA -> B: startQuiz()\nB -> D: getNextQuestion()\nactivate D\nD --> B: return question\nB --> A: return question\nA -> C: displayQuestion()\nC --> A: return playerAnswer\nA -> B: checkAnswer()\nB --> A: return result\nA -> C: updateScore()\nC --> A: return updatedScore\n@enduml"}